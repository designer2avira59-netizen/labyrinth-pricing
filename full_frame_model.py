# full_frame_model.py
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error
import xgboost as xgb

print("üîß –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
df = pd.read_csv('data.csv')

# --- –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É ---
df['date'] = pd.to_datetime(df['date'])
df['days_since_start'] = (df['date'] - df['date'].min()).dt.days

# --- –ü—Ä–∏–∑–Ω–∞–∫–∏: –¥–æ–±–∞–≤–ª—è–µ–º –¥–ª–∏–Ω—ã –∏ —â–∏—Ç—ã ---
features = [
    'base_area',
    'height',
    'num_floors',
    'total_post_length_m',       # —Å—É–º–º–∞—Ä–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Ç–æ–µ–∫
    'total_beam_length_m',       # —Å—É–º–º–∞—Ä–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–µ—Ä–µ–º—ã—á–µ–∫
    'num_panels',                # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —â–∏—Ç–æ–≤
    'shape_type',
    'days_since_start'
]

X = df[features]
y = df['target_price']

print(f"‚úÖ –ü—Ä–∏–∑–Ω–∞–∫–æ–≤: {len(features)}, –ü—Ä–æ–µ–∫—Ç–æ–≤: {len(df)}")

# --- –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ ---
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# --- –ú–æ–¥–µ–ª—å ---
print("üöÄ –û–±—É—á–∞–µ–º XGBoost...")
model = xgb.XGBRegressor(
    n_estimators=200,
    max_depth=6,
    learning_rate=0.05,
    subsample=0.8,
    colsample_bytree=0.8,
    random_state=42
)
model.fit(X_train, y_train)

# --- –ü—Ä–æ–≥–Ω–æ–∑ ---
y_pred = model.predict(X_test)
mae = mean_absolute_error(y_test, y_pred)
mape = mean_absolute_percentage_error(y_test, y_pred) * 100
r2 = model.score(X_test, y_test)

print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞ —Ç–µ—Å—Ç–µ:")
print(f"–°—Ä–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {mae:,.0f} —Ä—É–±.")
print(f"–û—à–∏–±–∫–∞ –≤ % (MAPE): {mape:.1f}%")
print(f"–¢–æ—á–Ω–æ—Å—Ç—å (R¬≤): {r2:.3f}")

# --- –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–≥–Ω–æ–∑–∞ ---
print(f"\nüß© –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–≥–Ω–æ–∑–∞:")
new = [[123.0, 5.95, 4, 284.0, 440.0, 59, 2, 500]]
price = model.predict(new)[0]
print(f"üéØ –ü—Ä–æ–≥–Ω–æ–∑: {price:,.0f} —Ä—É–±.")

# --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ---
model.save_model('full_frame_model.json')
print("‚úÖ –ú–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫ 'full_frame_model.json'")